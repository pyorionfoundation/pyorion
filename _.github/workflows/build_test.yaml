name: Build PyOrion Wheels Test

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build ${{ matrix.target }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            python-versions: "3.9 3.10 3.11 3.12 3.13"

          # macOS x86_64
          - os: macos-13
            target: x86_64-apple-darwin
            python-versions: "3.9 3.10 3.11 3.12 3.13"

          # Windows x86_64
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            python-versions: "3.9 3.10 3.11 3.12 3.13"

    steps:
      - uses: actions/checkout@v5

      # Linux system dependencies (for glib/gtk/webkit crates)
      - name: Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libayatana-appindicator3-dev \
            libasound2-dev \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libxdo-dev \
            librsvg2-dev \
            libglib2.0-dev \
            pkg-config \
            patchelf

      - name: Check pkg-config for glib
        if: runner.os == 'Linux'
        run: pkg-config --cflags --libs glib-2.0

      # Setup Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      # Setup Python (uv)
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"

      # Build wheels for multiple interpreters
      - name: Build Wheels
        run: |
          for py in ${{ matrix.python-versions }}; do
            uv run --python $py maturin build \
              --release \
              --out dist \
              --strip \
              --target ${{ matrix.target }} \
              --interpreter python$py
          done

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target }}
          path: dist/*
